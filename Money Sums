/*
    Author  : <<grenade24>>
    Email   : << rakeshkusrivastav@gmail.com >>
    "Everythings which takes effort to create give you smile too for a long time"
*/

#include <bits/stdc++.h>
using namespace std;

#define int               long long
#define pb                push_back
#define ppb               pop_back
#define pf                push_front
#define ppf               pop_front
#define all(x)            (x).begin(),(x).end()
#define uniq(v)           (v).erase(unique(all(v)),(v).end())
#define sz(x)             (int)((x).size())
#define fi                first
#define se                second
#define pii               pair<int,int>
#define rep(i,a,b)        for(int i=a;i<b;i++)
#define mem1(a)           memset(a,-1,sizeof(a))
#define mem0(a)           memset(a,0,sizeof(a))
#define ppc               __builtin_popcount
#define ppcll             __builtin_popcountll
#define endl '\n'
// const long long INF = 1e18;
// const int32_t mod = 1e9 + 7;
// const int32_t MM = 998244353;

typedef vector<int>    vi;

#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" -> "; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(double t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.fi); cerr << ","; _print(p.se); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}

/// generates all possible subsets for the given set
template<typename dataType>
void generateAllSubset(vector<dataType> &data)
{
	int i, j, n;
	n = data.size();

	for (i = 0; i < (1 << n); i++) {
		for (j = 0; j < n; j++) {
			if (i & (1 << j)) {
				cout << data[j] << " ";
			}
		}
		cout << "\n";
	}
}

// Programming starts here


int gcd(int a, int b) {
	if (b == 0)
		return a;
	return gcd(b, a % b);
}


void solve() {

	int n;
	cin >> n;

	set<int>s;
	vector<int> v(n);

	for (int i = 0; i < n; ++i)
	{
		cin >> v[i];
	}

	s.insert(v[0]);
	for (int i = 1; i < n; ++i)
	{
		set<int>s1;

		for (auto elm : s) {
			int num = v[i] + elm;
			s1.insert(num);
		}

		for (int elm : s1) {
			s.insert(elm);
		}

		s.insert(v[i]);

	}

	cout << s.size() << endl;

	for (int i : s)
		cout << i << " ";
	cout << endl;

}



signed main() {
	// ios_base::sync_with_stdio(false);
	// cin.tie(0); cout.tie(0);

// #ifndef ONLINE_JUDGE
// 	freopen("input.txt", "r", stdin);
// 	freopen("output.txt", "w", stdout);
// 	freopen("error.txt", "w", stderr);
// #endif

	//#ifdef SIEVE
	//	sieve();
	//#endif
	//#ifdef NCR
	//	init();
	//#endif


	int t = 1 ;
	// cin >> t;
	while (t--) solve();
	return 0;
}
